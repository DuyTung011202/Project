{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, renderSlot as _renderSlot, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fdaf08aa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"v-combobox\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"v-combobox__label\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"v-combobox__body\"\n};\nconst _hoisted_5 = [\"data-error\", \"tooltip\"];\nconst _hoisted_6 = [\"placeholder\", \"disabled\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"v-select__items\"\n};\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.label ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"label\", {\n    onClick: _cache[0] || (_cache[0] = $event => {\n      $options.showListData();\n      _ctx.$refs.input.focus();\n    })\n  }, [_createTextVNode(_toDisplayString($props.label) + \" \", 1 /* TEXT */), $props.required ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"*\")) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"v-combobox__selected\", [{\n      error: $data.error\n    }, {\n      'v-combobox__focus': $data.isShowListData\n    }]]),\n    style: _normalizeStyle($options.style),\n    \"data-error\": `${!$data.isShowListData && $data.error ? $data.errorMess : ''}`,\n    tooltip: `${!$data.isShowListData && $data.error ? $data.errorMess : ''}`\n  }, [_createElementVNode(\"span\", {\n    class: _normalizeClass($props.iconClass)\n  }, null, 2 /* CLASS */), _withDirectives(_createElementVNode(\"input\", {\n    ref: \"input\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.textInput = $event),\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.showListData && $options.showListData(...args)),\n    placeholder: $props.placeholder,\n    disabled: $props.selectBox,\n    onFocus: _cache[3] || (_cache[3] = (...args) => $options.showListData && $options.showListData(...args)),\n    onBlur: _cache[4] || (_cache[4] = (...args) => _ctx.hideListData && _ctx.hideListData(...args)),\n    onKeydown: _cache[5] || (_cache[5] = (...args) => $options.selecItemUpDown && $options.selecItemUpDown(...args))\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6), [[_vModelText, $data.textInput]]), _createElementVNode(\"div\", {\n    class: \"v-combobox__icon\",\n    tabindex: \"-1\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.showListData && $options.showListData(...args)),\n    onBlur: _cache[7] || (_cache[7] = (...args) => _ctx.hideListData && _ctx.hideListData(...args)),\n    onKeydown: _cache[8] || (_cache[8] = (...args) => $options.selecItemUpDown && $options.selecItemUpDown(...args))\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass(['ms-16 ms-icon', {\n      'ms-icon-arrow-down-black': !$data.isShowListData,\n      'ms-icon-arrow-up-black': $data.isShowListData\n    }])\n  }, null, 2 /* CLASS */)], 32 /* HYDRATE_EVENTS */)], 14 /* CLASS, STYLE, PROPS */, _hoisted_5), _createVNode(_Transition, {\n    name: \"slide-fade\"\n  }, {\n    default: _withCtx(() => [$data.isShowListData ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"v-select__list\",\n      tabindex: \"-1\",\n      onKeydown: _cache[9] || (_cache[9] = (...args) => $options.selecItemUpDown && $options.selecItemUpDown(...args)),\n      style: _normalizeStyle([$props.position === 'top' ? {\n        bottom: '100%'\n      } : {}]),\n      ref: \"combobox__data\"\n    }, [$data.filterData.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" Không tìm thấy kết quả \")) : (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 1\n    }, _renderList($data.filterData, (option, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: _normalizeClass([\"v-select__items\", [{\n          'v-select__hover': index == $data.indexItemFocus\n        }, {\n          'v-select__focus': option[$props.propKey] === $data.keyItemSelected\n        }]]),\n        key: index,\n        onClick: $event => $options.onHandleSelected(option, index)\n      }, [_renderSlot(_ctx.$slots, \"item\", {\n        option: option,\n        index: index\n      }, () => [_createTextVNode(_toDisplayString(option[$props.propValue]), 1 /* TEXT */)], true), !$props.selectBox ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass({\n          'v-select__items--checked': option[$props.propKey] === $data.keyItemSelected\n        })\n      }, null, 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_8);\n    }), 128 /* KEYED_FRAGMENT */))], 36 /* STYLE, HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 3 /* FORWARDED */\n  })])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$props","label","_hoisted_2","_createElementVNode","onClick","_cache","$event","$options","showListData","_ctx","$refs","input","focus","required","_hoisted_3","_hoisted_4","_normalizeClass","error","$data","isShowListData","style","_normalizeStyle","errorMess","tooltip","iconClass","ref","type","textInput","args","placeholder","disabled","selectBox","onFocus","onBlur","hideListData","onKeydown","selecItemUpDown","tabindex","_createVNode","_Transition","name","position","bottom","filterData","length","_hoisted_7","_Fragment","key","_renderList","option","index","indexItemFocus","propKey","keyItemSelected","onHandleSelected","_renderSlot","$slots","propValue"],"sources":["D:\\Learning\\MISA_FRESHER_WEB\\freshermisa\\web202305\\mf1661-ddtung\\vuejs\\web-05\\src\\components\\base\\combobox\\MISACombobox.vue"],"sourcesContent":["<template>\r\n    <div class=\"v-combobox\">\r\n        <div class=\"v-combobox__label\" v-if=\"label\">\r\n            <label @click=\"showListData(); $refs.input.focus()\">{{ label }} <span v-if=\"required\">*</span>\r\n            </label>\r\n        </div>\r\n        <div class=\"v-combobox__body\">\r\n            <div class=\"v-combobox__selected\" :class=\"[{ error: error }, { 'v-combobox__focus': isShowListData }]\"\r\n                :style=\"style\" :data-error=\"`${!isShowListData && error ? errorMess : ''}`\"\r\n                :tooltip=\"`${!isShowListData && error ? errorMess : ''}`\">\r\n                <span :class=\"iconClass\"></span>\r\n                <input ref=\"input\" type=\"text\" v-model=\"textInput\" @click=\"showListData\" :placeholder=\"placeholder\"\r\n                    :disabled=\"selectBox\" @focus=\"showListData\" @blur=\"hideListData\" @keydown=\"selecItemUpDown\" />\r\n                <div class=\"v-combobox__icon\" tabindex=\"-1\" @click=\"showListData\" @blur=\"hideListData\"\r\n                    @keydown=\"selecItemUpDown\">\r\n                    <div\r\n                        :class=\"['ms-16 ms-icon', { 'ms-icon-arrow-down-black': !isShowListData, 'ms-icon-arrow-up-black': isShowListData }]\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <transition name=\"slide-fade\">\r\n                <div class=\"v-select__list\" v-if=\"isShowListData\" tabindex=\"-1\" @keydown=\"selecItemUpDown\"\r\n                    :style=\"[position === 'top' ? { bottom: '100%' } : {}]\" ref=\"combobox__data\">\r\n                    <div v-if=\"filterData.length === 0\" class=\"v-select__items\">\r\n                        Không tìm thấy kết quả\r\n                    </div>\r\n                    <div v-else class=\"v-select__items\" v-for=\"(option, index) of filterData\" :key=\"index\"\r\n                        @click=\"onHandleSelected(option, index)\"\r\n                        :class=\"[{ 'v-select__hover': index == indexItemFocus }, { 'v-select__focus': option[propKey] === keyItemSelected }]\">\r\n                        <slot name=\"item\" :option=\"option\" :index=\"index\">\r\n                            {{ option[propValue] }}\r\n                        </slot>\r\n                        <div v-if=\"!selectBox\" :class=\"{ 'v-select__items--checked': option[propKey] === keyItemSelected }\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { removeVietnameseTones } from '../../../js/common/function.js'\r\n// import Validate from '../../../js/common/validate.js';\r\nimport axios from 'axios';\r\nimport Enum from '../../../js/common/enum.js';\r\nconst keycode = Enum.KEY_CODE;\r\nexport default {\r\n    name: \"MISACombobox\",\r\n    props: {\r\n        data: { // Danh sách dữ liệu\r\n            type: Array,\r\n            required: false\r\n        },\r\n        placeholder: { // Placeholder của input\r\n            type: String,\r\n            required: false,\r\n            default: \"\",\r\n        },\r\n        position: { // Vị trí hiển thị danh sách dữ liệu\r\n            type: String,\r\n            required: false,\r\n            default: \"top\",\r\n        },\r\n        label: { // Label của combobox\r\n            type: String,\r\n            required: false,\r\n            default: null,\r\n        },\r\n        required: { // Bắt buộc nhập\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        selectBox: { // Nếu là select box thì không cho gõ text\r\n            type: Boolean,\r\n            required: false,\r\n            default: false,\r\n        },\r\n        modelValue: { // Giá trị của combobox\r\n            required: false,\r\n            default: null,\r\n        },\r\n        propKey: { // Key của dữ liệu\r\n            required: false,\r\n            default: \"key\",\r\n        },\r\n        propValue: { // Value của dữ liệu\r\n            required: false,\r\n            default: \"value\",\r\n        },\r\n        styleProps: { // Style của combobox\r\n            type: Array,\r\n            required: false,\r\n            default: () => [],\r\n        },\r\n        propApi: { // Nếu có api thì lấy dữ liệu từ api\r\n            type: String,\r\n            required: false,\r\n            default: null,\r\n        },\r\n        errorLabel: { // Hiển thị lỗi\r\n            required: false,\r\n        },\r\n        isSubmit: { // Kiểm tra khi submit form\r\n            required: false,\r\n            default: false,\r\n        },\r\n        iconClass: {\r\n            type: String\r\n        },\r\n    },\r\n    computed: {\r\n        /**\r\n         * @description: Tạo style cho combobox\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        style() {\r\n            let styleProps = {};\r\n            if (this.styleProps.length > 0) {\r\n                this.styleProps.forEach((item) => {\r\n                    const key = item.split(\":\")[0];\r\n                    const value = item.split(\":\")[1];\r\n                    styleProps[key] = value;\r\n                });\r\n                return styleProps;\r\n            } else {\r\n                return {};\r\n            }\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            isShowListData: false, // Hiển thị danh sách dữ liệu\r\n            indexItemFocus: 0, // index của item được focus\r\n            indexItemSelected: -1, // index của item được chọn\r\n            keyItemSelected: this.modelValue,\r\n            textInput: this.textInput,\r\n            dataApi: [], // dữ liệu lấy từ api\r\n            filterData: [], // dữ liệu lọc\r\n            error: false, // Hiển thị lỗi\r\n            errorMess: \"\", // Nội dung lỗi\r\n        };\r\n    },\r\n    watch: {\r\n        /**\r\n         * @description: Khi thay đổi text thì sẽ tìm kiếm dữ liệu theo text\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        textInput: {\r\n            handler: function (value) {\r\n                const self = this;\r\n                self.filterData = self.dataApi.filter((option) =>\r\n                    removeVietnameseTones(option[self.propValue])\r\n                        .toLowerCase()\r\n                        .includes(removeVietnameseTones(value).toLowerCase())\r\n                );\r\n                this.indexItemFocus = -1;\r\n            },\r\n            deep: true,\r\n        },\r\n        /**\r\n         * @description: Khi bên component cha gọi tới submit thì validate lại dữ liệu trước khi submit\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        isSubmit: { // nếu isSubmit là true thì validate\r\n            handler(isSubmitted) {\r\n                if (isSubmitted) {\r\n                    if (this.validate() && self.error) {\r\n                        this.$emit(\"update:isSubmit\", false);\r\n                    }\r\n                }\r\n            },\r\n            deep: true,\r\n        },\r\n        /**\r\n         * @description: Nếu data bên component cha thay đổi thì sẽ lấy dữ liệu mới\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        data: {\r\n            handler(newData) {\r\n                this.dataApi = newData;\r\n                this.filterData = newData;\r\n                if (this.indexItemSelected !== -1) {\r\n                    this.textInput = newData[this.indexItemSelected][this.propValue];\r\n                }\r\n            },\r\n            deep: true,\r\n        },\r\n        /**\r\n         * @description: Nếu modelValue bên component cha thay đổi thì sẽ reset lại combobox\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        modelValue(newVal) {\r\n            if (newVal === null) { // Nếu modelValue bằng null thì set textInput = \"\" và keyItemSelected = \"\"\r\n                this.$refs.input.blur();\r\n                this.resetCombobox();\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        /**\r\n         * @description: Hàm này dùng để validate combobox xem có trống hay không\r\n         * @param {String} giá trị của combobox\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        // validate() {\r\n        //     const self = this;\r\n        //     if (self.required) {\r\n        //         self.error = !Validate.isNullOrEmpty(self.keyItemSelected);\r\n        //         if (self.error) {\r\n        //             self.errorMess = self.$t(\"validate_error.required\", [self.errorLabel]);\r\n        //             return false;\r\n        //         } else {\r\n        //             self.errorMess = \"\";\r\n        //             self.error = false;\r\n        //         }\r\n        //     }\r\n        // },\r\n        /**\r\n         * @description: Hàm này dùng để hiển thị danh sách dữ liệu\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        showListData() {\r\n            const self = this;\r\n            try {\r\n                self.isShowListData = true; // Chuyển trạng thái hiển thị danh sách dữ liệu\r\n                self.filterData = self.dataApi; // Gán dữ liệu đã lọc bằng dữ liệu từ api\r\n                if (self.indexItemSelected > -1) {\r\n                    self.$nextTick(() => { // Đợi DOM render xong thì mới scroll đến vị trí đã chọn\r\n                        self.indexItemFocus = self.indexItemSelected;\r\n                        const position = self.$refs['combobox__data'].children[self.indexItemSelected].offsetTop - self.$refs['combobox__data'].offsetTop;\r\n                        self.$refs['combobox__data'].scrollTop = position;\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        /**\r\n         * @description: Hàm này dùng để lấy dữ liệu khi click vào item hoặc nhấn enter\r\n         * @param {Object} item - Dữ liệu của item được chọn\r\n         * @param {Number} index - Index của item được chọn\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        onHandleSelected(item, index) {\r\n            const self = this;\r\n            try {\r\n                const value = item[self.propValue]; // Lấy giá trị của item được chọn\r\n                self.textInput = value; // Gán giá trị cho textInput\r\n                self.indexItemSelected = index; // Gán index của item được chọn\r\n                self.indexItemFocus = index; // Gán index của item được focus\r\n                self.keyItemSelected = item[self.propKey]; // Gán key của item được chọn\r\n                self.$emit(\"update:modelValue\", self.keyItemSelected); // Emit giá trị của item được chọn\r\n                self.$emit(\"update:textInput\", value); // Emit giá trị của text input\r\n                self.isShowListData = false; // Hide list data\r\n                // self.validate();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        /**\r\n         * @description: Hàm này dùng để ẩn đi danh sách dữ liệu\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        // hideListData() {\r\n        //     const self = this;\r\n        //     if (!Validate.isNullOrEmpty(self.textInput)) { // Nếu textInput không rỗng thì emit giá trị của textInput là không có trong data\r\n        //         self.$emit(\"update:modelValue\", null);\r\n        //         self.resetCombobox();\r\n        //     }\r\n        //     if (Validate.isNullOrEmpty(self.keyItemSelected)) { // Nếu keyItemSelected không rỗng thì emit giá trị của keyItemSelected là không có trong data\r\n        //         self.onHandleSelected(self.dataApi[self.indexItemSelected], self.indexItemSelected);\r\n        //     }\r\n        //     // this.validate();\r\n        //     self.isShowListData = false; // Hide list data\r\n        // },\r\n        /**\r\n         * @description: Hàm này dùng để chọn item khi nhấn phím mũi tên lên, xuống, enter, esc\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        selecItemUpDown(event) {\r\n            const self = this;\r\n            const keyCodePress = event.keyCode; // Lấy mã phím được nhấn\r\n            if (!self.isShowListData && (keyCodePress == keycode.ARROW_DOWN || keyCodePress == keycode.ARROW_UP)) {\r\n                self.showListData();\r\n                return;\r\n            }\r\n            if (self.isShowListData) {\r\n                try {\r\n                    switch (keyCodePress) {\r\n                        case keycode.ENTER:\r\n                            if (self.filterData.length > 0 && self.indexItemFocus !== -1) {\r\n                                // lấy ra vị trí index của item được chọn trong danh sách dữ liệu\r\n                                const index = self.dataApi.findIndex((item) => item[self.propValue] == self.filterData[self.indexItemFocus][self.propValue]);\r\n                                self.onHandleSelected(self.filterData[self.indexItemFocus], index);\r\n                            } else {\r\n                                self.hideListData();\r\n                            }\r\n                            break;\r\n                        case keycode.ARROW_DOWN:\r\n                            self.indexItemFocus = self.indexItemFocus === self.filterData.length - 1 ? 0 : self.indexItemFocus + 1; // Focus vào item tiếp theo\r\n                            self.handleScroll(self.indexItemFocus);\r\n                            break;\r\n                        case keycode.ARROW_UP:\r\n                            self.indexItemFocus = self.indexItemFocus === 0 ? self.filterData.length - 1 : self.indexItemFocus - 1; // Focus vào item trước đó\r\n                            self.handleScroll(self.indexItemFocus);\r\n                            break;\r\n                        case keycode.ESC:\r\n                            self.hideListData(); // Ẩn danh sách dữ liệu\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @description: Hàm này dùng để xử lý thanh cuộn lên xuống khi focus vào item\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        handleScroll(indexItemFocus) {\r\n            const self = this;\r\n            try {\r\n                const position = self.$refs['combobox__data'].children[indexItemFocus].offsetTop - self.$refs['combobox__data'].offsetTop;\r\n                self.$refs['combobox__data'].scrollTop = position;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        /**\r\n         * @description: Hàm này dùng để reset lại combobox\r\n         * Author: DDTung 11/07/2023\r\n         */\r\n        resetCombobox() {\r\n            this.indexItemSelected = -1; // Reset lại index item được chọn\r\n            this.indexItemFocus = 0; // Reset lại index item được focus\r\n            this.keyItemSelected = null; // Reset lại key item được chọn\r\n            this.textInput = \"\"; // Reset lại text input\r\n            this.filterData = []; // Reset lại dữ liệu lọc\r\n        },\r\n    },\r\n    /**\r\n     * @description: Hook khởi tạo để gán giá trị vào combo box\r\n     * Author: DDTung 11/07/2023\r\n     */\r\n    async created() {\r\n        const self = this;\r\n        try {\r\n            if (self.propApi) { // Nếu có prop api thì gọi api lấy dữ liệu\r\n                const response = await axios.get(self.propApi);\r\n                self.dataApi = response.data;\r\n                self.filterData = response.data;\r\n            }\r\n            if (self.data) { // Nếu có dữ liệu truyền từ component cha thì gán dữ liệu\r\n                self.dataApi = self.data;\r\n                self.filterData = self.data;\r\n            }\r\n            if (self.modelValue) { // Nếu có giá trị mặc định truyền từ component cha\r\n                const index = self.dataApi.findIndex((item) => item[self.propKey] === self.modelValue); // Tìm index của item có key trùng với giá trị mặc định\r\n                if (index !== -1) { // Nếu tồn tại item có key trùng với giá trị mặc định\r\n                    self.onHandleSelected(self.dataApi[index], index); // Lấy dữ liệu của item được focus\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.slide-fade-enter-from,\r\n.slide-fade-leave-to {\r\n    transform: translateY(10px);\r\n    opacity: 0;\r\n}\r\n\r\n.slide-fade-enter-active,\r\n.slide-fade-leave-active {\r\n    transition: all 0.3s;\r\n}\r\n\r\n.v-combobox__icon {\r\n    background: var(--icon-url) no-repeat -62px -328px;\r\n}\r\n\r\n.v {\r\n    &-combobox {\r\n        position: relative;\r\n        margin-right: 11px;\r\n    }\r\n\r\n    &-combobx_show {\r\n        border: 1px solid #1aa4c8;\r\n    }\r\n\r\n    &-combobox__label {\r\n        label {\r\n            cursor: pointer;\r\n        }\r\n\r\n        margin-bottom: 8px;\r\n\r\n        span {\r\n            color: red;\r\n        }\r\n    }\r\n\r\n    &-combobox__body {\r\n        width: 60px;\r\n        text-align: left;\r\n        position: relative;\r\n        outline: none;\r\n        box-sizing: border-box;\r\n        border-radius: 2.5px;\r\n        background-color: #fff;\r\n    }\r\n\r\n    &-combobox__selected {\r\n        user-select: none;\r\n        padding: 0 20px 0 10px;\r\n        outline: none;\r\n        min-height: 25px;\r\n        color: #000;\r\n        box-sizing: border-box;\r\n        border: 1px solid grey;\r\n        border-radius: 2.5px;\r\n        background-color: #fff;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        input {\r\n            border: none;\r\n            outline: none;\r\n            padding: 0;\r\n            background-color: transparent;\r\n            overflow: hidden;\r\n        }\r\n    }\r\n\r\n    &-combobox__focus {\r\n        border: 1px solid #1aa4c8;\r\n    }\r\n\r\n    &-combobox__icon {\r\n        top: 0;\r\n        right: 0;\r\n        position: absolute;\r\n        min-width: 25px;\r\n        cursor: pointer;\r\n        bottom: 0;\r\n        border-radius: 0 4px 4px 0;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    &-select__list {\r\n        color: #000;\r\n        position: absolute;\r\n        background-color: #fff;\r\n        padding: 8px;\r\n        bottom: 100%;\r\n        left: 0;\r\n        right: 0;\r\n        z-index: 9999;\r\n        max-height: 200px;\r\n        overflow-y: auto;\r\n        box-shadow: 0 0 10px rgba(23, 27, 42, 0.24);\r\n    }\r\n\r\n    &-select__items {\r\n        padding: 0 4px;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        border-radius: 4px;\r\n        min-height: 25px;\r\n        line-height: 25px;\r\n        position: relative;\r\n        text-align: center;\r\n\r\n        &:hover {\r\n            background-color: #1aa5c88e;\r\n        }\r\n\r\n        &.itemFocus {\r\n            background-color: grey;\r\n        }\r\n    }\r\n\r\n    &-select__focus {\r\n        background-color: #1aa4c8 !important;\r\n        color: #fff !important;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}