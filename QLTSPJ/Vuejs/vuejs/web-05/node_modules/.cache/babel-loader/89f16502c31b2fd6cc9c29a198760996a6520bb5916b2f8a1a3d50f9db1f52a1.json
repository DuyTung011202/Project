{"ast":null,"code":"export default {\n  name: \"MISAInput\",\n  props: {\n    iconClass: {\n      type: String\n    },\n    customType: {\n      type: String\n    },\n    customId: {\n      type: String\n    },\n    readonly: {\n      type: Boolean\n    },\n    customClass: {\n      type: String\n    },\n    customPlaceholder: {\n      type: String\n    },\n    formatCost: {\n      type: Function\n    },\n    inputNumber: {\n      type: Function\n    },\n    min: {\n      type: Number\n    },\n    enableKeypress: {\n      type: Boolean\n    },\n    modelValue: {\n      type: [String, Number]\n    },\n    error: {\n      type: Object\n    },\n    validate: {\n      type: Function\n    },\n    propValue: {\n      type: String\n    }\n  },\n  created() {\n    this.dataValue = this.modelValue;\n  },\n  watch: {\n    modelValue: function (newValue) {\n      console.log(\"modelValue: \" + newValue);\n      this.dataValue = this.modelValue;\n    }\n  },\n  methods: {\n    /**\r\n     * @description: update input value\r\n     * @author: DDTung (03/07/2023)\r\n     */\n    onInput() {\n      this.$emit(\"update:modelValue\", this.dataValue);\n    }\n  },\n  data() {\n    return {\n      dataValue: \"\"\n    };\n  }\n};","map":{"version":3,"names":["name","props","iconClass","type","String","customType","customId","readonly","Boolean","customClass","customPlaceholder","formatCost","Function","inputNumber","min","Number","enableKeypress","modelValue","error","Object","validate","propValue","created","dataValue","watch","newValue","console","log","methods","onInput","$emit","data"],"sources":["C:\\Users\\Admin\\Desktop\\MISA_FRESHER_WEB\\web202305\\mf1661-ddtung\\vuejs\\web-05\\src\\components\\base\\input\\MISAInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"content__input\">\r\n        <span :class=\"iconClass\"></span>\r\n        <input :min=\"min\" v-model=\"dataValue\" @change=\"formatCost\" @input=\"onInput\" :readonly=\"readonly\"\r\n            :class=\"customClass\" :placeholder=\"customPlaceholder\" :type=\"customType\" :id=\"customId\"\r\n            @keypress=\"enableKeypress && inputNumber($event)\" @blur=\"validate()\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"MISAInput\",\r\n    props: {\r\n        iconClass: {\r\n            type: String,\r\n        },\r\n        customType: {\r\n            type: String,\r\n        },\r\n        customId: {\r\n            type: String,\r\n        },\r\n        readonly: {\r\n            type: Boolean,\r\n        },\r\n        customClass: {\r\n            type: String,\r\n        },\r\n        customPlaceholder: {\r\n            type: String,\r\n        },\r\n\r\n        formatCost: {\r\n            type: Function,\r\n        },\r\n        inputNumber: {\r\n            type: Function,\r\n        },\r\n        min: {\r\n            type: Number,\r\n        },\r\n        enableKeypress: {\r\n            type: Boolean,\r\n        },\r\n        modelValue: {\r\n            type: [String, Number]\r\n        },\r\n        error: {\r\n            type: Object,\r\n        },\r\n        validate: {\r\n            type: Function,\r\n        },\r\n        propValue: {\r\n            type: String\r\n        }\r\n\r\n    },\r\n    created() {\r\n        this.dataValue = this.modelValue\r\n    },\r\n\r\n    watch: {\r\n        modelValue: function (newValue) {\r\n            console.log(\"modelValue: \" + newValue);\r\n            this.dataValue = this.modelValue\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * @description: update input value\r\n         * @author: DDTung (03/07/2023)\r\n         */\r\n        onInput() {\r\n            this.$emit(\"update:modelValue\", this.dataValue)\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            dataValue: \"\",\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n\r\n<style  >\r\n.default-input {\r\n    background-color: #fff;\r\n    border-radius: 2.5px;\r\n    border: 1px solid #afafaf;\r\n    width: 180px;\r\n    height: 35px;\r\n    overflow: hidden;\r\n    padding-left: 38px;\r\n}\r\n\r\n.default-input:focus {\r\n    border-color: var(--primary-color)\r\n}\r\n\r\n.content__input input::placeholder {\r\n    font-size: 13px;\r\n    font-style: italic\r\n}\r\n\r\n.content__input {\r\n    position: relative\r\n}\r\n\r\n.content__input input {\r\n    padding: 0 36px;\r\n    margin-right: 11px\r\n}\r\n\r\n.input-icon {\r\n    position: absolute;\r\n    width: 24px;\r\n    height: 24px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 8px\r\n}\r\n\r\n.icon-search {\r\n    background: var(--icon-url) no-repeat -240px -20px\r\n}\r\n</style>"],"mappings":"AAUA,eAAe;EACXA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACHC,SAAS,EAAE;MACPC,IAAI,EAAEC;IACV,CAAC;IACDC,UAAU,EAAE;MACRF,IAAI,EAAEC;IACV,CAAC;IACDE,QAAQ,EAAE;MACNH,IAAI,EAAEC;IACV,CAAC;IACDG,QAAQ,EAAE;MACNJ,IAAI,EAAEK;IACV,CAAC;IACDC,WAAW,EAAE;MACTN,IAAI,EAAEC;IACV,CAAC;IACDM,iBAAiB,EAAE;MACfP,IAAI,EAAEC;IACV,CAAC;IAEDO,UAAU,EAAE;MACRR,IAAI,EAAES;IACV,CAAC;IACDC,WAAW,EAAE;MACTV,IAAI,EAAES;IACV,CAAC;IACDE,GAAG,EAAE;MACDX,IAAI,EAAEY;IACV,CAAC;IACDC,cAAc,EAAE;MACZb,IAAI,EAAEK;IACV,CAAC;IACDS,UAAU,EAAE;MACRd,IAAI,EAAE,CAACC,MAAM,EAAEW,MAAM;IACzB,CAAC;IACDG,KAAK,EAAE;MACHf,IAAI,EAAEgB;IACV,CAAC;IACDC,QAAQ,EAAE;MACNjB,IAAI,EAAES;IACV,CAAC;IACDS,SAAS,EAAE;MACPlB,IAAI,EAAEC;IACV;EAEJ,CAAC;EACDkB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,SAAQ,GAAI,IAAI,CAACN,UAAS;EACnC,CAAC;EAEDO,KAAK,EAAE;IACHP,UAAU,EAAE,SAAAA,CAAUQ,QAAQ,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,cAAa,GAAIF,QAAQ,CAAC;MACtC,IAAI,CAACF,SAAQ,GAAI,IAAI,CAACN,UAAS;IACnC;EACJ,CAAC;EACDW,OAAO,EAAE;IACL;;;;IAIAC,OAAOA,CAAA,EAAG;MACN,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACP,SAAS;IAClD;EACJ,CAAC;EACDQ,IAAIA,CAAA,EAAG;IACH,OAAO;MACHR,SAAS,EAAE;IACf;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}