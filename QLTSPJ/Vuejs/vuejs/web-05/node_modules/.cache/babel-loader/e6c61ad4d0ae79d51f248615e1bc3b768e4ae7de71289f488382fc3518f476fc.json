{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.find-last.js\";\nimport \"core-js/modules/es.typed-array.find-last-index.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nexport default {\n  props: {\n    label: {\n      type: String\n    },\n    items: {\n      type: Array\n    },\n    fieldName: {\n      type: String\n    },\n    fieldCode: {\n      type: String\n    },\n    code: {\n      type: String\n    },\n    tab: {\n      type: String\n    },\n    border: {\n      type: String\n    },\n    refName: {\n      type: String\n    },\n    value: {\n      type: String\n    },\n    Filter: {\n      type: Int16Array\n    }\n  },\n  data() {\n    return {\n      currentItem: {},\n      // item hiện tại\n      isShowCbb: false,\n      // show drop-down\n      placeholder: \"Nhập giá trị \",\n      // playholder\n      dataItems: [],\n      keyword: \"\",\n      i: -1,\n      hOfItem: 35,\n      hOfBody: 135,\n      filter: 0\n    };\n  }\n};\n\n//     methods: {\n//         /**\n//          * hàm xử lý sự kiện click ra ngoài đóng cbb\n//          * AUTHOR:HTTHOA(25/03/2023)\n//          *\n//          */\n//         hideCbb() {\n//             this.isShowCbb = false;\n//         },\n//         onBlur() {\n//             setTimeout(() => {\n//                 this.isShowCbb = false;\n//             }, 200);\n//             this.$emit(\"keyword\", this.keyword);\n//             console.log(this.keyword);\n//             this.$emit(\"onBlur\");\n//         },\n//         /**\n//          * hàm chọn item khi nhấn enter\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          *\n//          */\n//         keyTab() {\n//             var code = event.keyCode || event.which;\n//             if (code === 9) {\n//                 this.onFocus();\n//             }\n//         },\n//         /**\n//          * khi chọn 1 item trong combobox\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          */\n//         selectItem() {\n//             this.$emit(\"selectedItem\", this.currentItem);\n//             console.log(this.currentItem);\n//             this.keyword = this.currentItem[this.fieldCode];\n//             this.placeholder = this.currentItem[this.fieldCode];\n//             this.isShowCbb = false;\n//             this.i = 0;\n//             this.$el.querySelector(\".input\").focus();\n//             // this.$refs.refName.focus();\n//             this.dataItems = this.items;\n//         },\n//         /**\n//          * hàm click chọn item\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          *\n//          */\n//         onClickItem(item) {\n//             this.currentItem = item;\n//             this.selectItem();\n//         },\n//         /**\n//          * mở đóng combobox\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          */\n//         toggleCombobox() {\n//             this.isShowCbb = !this.isShowCbb;\n//             if (this.isShowCbb == true) {\n//                 this.scrollItem((this.i - 1) * this.hOfItem);\n//             }\n//         },\n//         /**\n//          *\n//          * cuộn combobox. nếu vị trí lớn hơn 0 thì cuộn đến tọa độ (0,position)\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          */\n//         scrollItem(position) {\n//             if (position >= 0) {\n//                 this.$refs.bodyDrop.scrollTo(0, position); //cuộn đến tọa độ (0,position)\n//             }\n//         },\n//         /**\n//          * khi keydown mở combobox\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          */\n//         keyDown() {\n//             try {\n//                 if (!this.isShowCbb) {\n//                     this.isShowCbb = true;\n//                 } else {\n//                     this.i++;\n//                     if (this.i > this.dataItems.length - 1) {\n//                         this.i = this.dataItems.length - 1;\n//                     }\n//                     this.currentItem = this.dataItems[this.i];\n//                     this.scrollItem((this.i - 1) * this.hOfItem);\n//                 }\n//             } catch (error) {\n//                 console.log(error);\n//             }\n//         },\n//         /**\n//          * key down thì gán item hiện tại bằng item ở mảng ở vị trí i\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          */\n//         keyUp() {\n//             try {\n//                 if (this.i > 0) {\n//                     this.i--;\n//                     this.currentItem = this.dataItems[this.i];\n//                     this.scrollItem((this.i - 1) * this.hOfItem);\n//                 }\n//             } catch (error) {\n//                 console.log(error);\n//             }\n//         },\n\n//         /**\n//          * hàm xử lý sự kiện focus\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          *\n//          */\n//         onFocus() {\n//             // khi focus thì select\n//             // this.$refs.refName.select();\n//             this.$emit(\"keyword\", this.keyword);\n//         },\n//     },\n//     created() {\n\n//         // this.placeholder = this.label;\n//         this.$emit(\"onFocusCbb\");\n//         this.keyword = this.value;\n//         for (const item of this.items) {\n//             if (item[this.fieldName] == this.initValue) {\n//                 this.currentItem = item;\n//             }\n//         }\n//     },\n//     watch: {\n//         Filter: function (value) {\n//             this.filter = value;\n//             console.log(value);\n//         },\n//         items: function (value) {\n//             // nhận mảng item để hiển thị\n//             this.dataItems = value;\n//         },\n//         value: function (vl) {\n//             this.keyword = vl;\n//         },\n//         /**\n//          * theo dõi biến key word\n//          *  AUTHOR:HTTHOA(25/03/2023)\n//          */\n//         keyword() {\n//             if (this.keyword != this.currentItem[this.fieldCode]) {\n//                 if (this.keyword == \"\") {\n//                     this.currentItem = \"\";\n//                     this.$emit(\"selectedItem\", this.currentItem);\n//                 }\n//             } else if (this.keyword) {\n//                 // this.isShowCbb=!this.isShowCbb\n//                 this.dataItems.forEach((item) => {\n//                     let valueSearch = item[this.fieldCode].trim().toLowerCase();\n//                     if (valueSearch.includes(this.keyword.trim().toLowerCase())) {\n//                         return item;\n//                     }\n//                 });\n//             } else {\n//                 this.dataItems = this.items;\n//             }\n//         },\n//     },\n//     mounted() {\n\n//         var i = this.$refs.refName\n//         console.log(i);\n//         this.emitter.on(\"focus\", () => {\n//             this.$el.querySelector(\".input\").focus()\n//             // this.$el.querySelector(\".input\").focus();\n//         });\n//         // xét giá trị ban đầu cho combobox\n//         this.currentItem[this.fieldCode] = this.code;\n\n//         // this.item.filter((item,index)=>{\n//         //   if(item[this.fieldCode]===this.currentItem[this.fieldCode]){\n//         //     this.i=index\n//         //   }\n//         // })\n//     },\n// };","map":{"version":3,"names":["props","label","type","String","items","Array","fieldName","fieldCode","code","tab","border","refName","value","Filter","Int16Array","data","currentItem","isShowCbb","placeholder","dataItems","keyword","i","hOfItem","hOfBody","filter"],"sources":["C:\\Users\\Admin\\Desktop\\MISA_FRESHER_WEB\\web202305\\mf1661-ddtung\\vuejs\\web-05\\src\\components\\base\\combobox\\MISACombobox.vue"],"sourcesContent":["<template>\r\n    <div class=\"m-combobox\" @click=\"toggleCombobox\" @keydown.enter.stop=\"selectItem\" @keyup.down=\"keyDown\" @keyup.up=\"keyUp\"\r\n        v-outside=\"hideCbb\">\r\n        <input class=\"input\" v-model=\"keyword\" :placeholder=\"this.placeholder\" :tabindex=\"tab\" :class=\"border\"\r\n            @blur=\"onBlur\" @keydown=\"keyTab\" @focus=\"onFocusCbb\" :ref=\"refName\" />\r\n\r\n        <div class=\"up-down\">\r\n            <div class=\"down\">\r\n                <div class=\"btn icon-down-bold\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"drop-down\" ref=\"bodyDrop\" v-show=\"isShowCbb\">\r\n            <div class=\"drop-down-body\">\r\n                <div v-for=\"(item, index) of dataItems\" class=\"drop-down-item\"\r\n                    :class=\"item[fieldCode] == currentItem[fieldCode] ? 'active' : ''\" @click.exact.stop=\"onClickItem(item)\"\r\n                    :key=\"item\">\r\n                    <div class=\"icon-tick\">\r\n                        <div :id=\"index\" v-show=\"item[fieldCode] == currentItem[fieldCode]\" class=\"tick\"></div>\r\n                    </div>\r\n\r\n                    <div class=\"drop-down-name\">{{ item[fieldCode] }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<!-- :class=\"item[fieldCode] == currentItem[fieldCode] ? 'active' : ''\" -->\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        label: {\r\n            type: String,\r\n        },\r\n        items: {\r\n            type: Array,\r\n        },\r\n        fieldName: {\r\n            type: String,\r\n        },\r\n        fieldCode: {\r\n            type: String,\r\n        },\r\n        code: {\r\n            type: String,\r\n        },\r\n        tab: {\r\n            type: String,\r\n        },\r\n        border: {\r\n            type: String,\r\n        },\r\n        refName: {\r\n            type: String,\r\n        },\r\n        value: {\r\n            type: String,\r\n        },\r\n        Filter: {\r\n            type: Int16Array,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            currentItem: {}, // item hiện tại\r\n            isShowCbb: false, // show drop-down\r\n            placeholder: \"Nhập giá trị \", // playholder\r\n            dataItems: [],\r\n            keyword: \"\",\r\n            i: -1,\r\n            hOfItem: 35,\r\n            hOfBody: 135,\r\n            filter: 0,\r\n        };\r\n    }\r\n}\r\n\r\n//     methods: {\r\n//         /**\r\n//          * hàm xử lý sự kiện click ra ngoài đóng cbb\r\n//          * AUTHOR:HTTHOA(25/03/2023)\r\n//          *\r\n//          */\r\n//         hideCbb() {\r\n//             this.isShowCbb = false;\r\n//         },\r\n//         onBlur() {\r\n//             setTimeout(() => {\r\n//                 this.isShowCbb = false;\r\n//             }, 200);\r\n//             this.$emit(\"keyword\", this.keyword);\r\n//             console.log(this.keyword);\r\n//             this.$emit(\"onBlur\");\r\n//         },\r\n//         /**\r\n//          * hàm chọn item khi nhấn enter\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          *\r\n//          */\r\n//         keyTab() {\r\n//             var code = event.keyCode || event.which;\r\n//             if (code === 9) {\r\n//                 this.onFocus();\r\n//             }\r\n//         },\r\n//         /**\r\n//          * khi chọn 1 item trong combobox\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          */\r\n//         selectItem() {\r\n//             this.$emit(\"selectedItem\", this.currentItem);\r\n//             console.log(this.currentItem);\r\n//             this.keyword = this.currentItem[this.fieldCode];\r\n//             this.placeholder = this.currentItem[this.fieldCode];\r\n//             this.isShowCbb = false;\r\n//             this.i = 0;\r\n//             this.$el.querySelector(\".input\").focus();\r\n//             // this.$refs.refName.focus();\r\n//             this.dataItems = this.items;\r\n//         },\r\n//         /**\r\n//          * hàm click chọn item\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          *\r\n//          */\r\n//         onClickItem(item) {\r\n//             this.currentItem = item;\r\n//             this.selectItem();\r\n//         },\r\n//         /**\r\n//          * mở đóng combobox\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          */\r\n//         toggleCombobox() {\r\n//             this.isShowCbb = !this.isShowCbb;\r\n//             if (this.isShowCbb == true) {\r\n//                 this.scrollItem((this.i - 1) * this.hOfItem);\r\n//             }\r\n//         },\r\n//         /**\r\n//          *\r\n//          * cuộn combobox. nếu vị trí lớn hơn 0 thì cuộn đến tọa độ (0,position)\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          */\r\n//         scrollItem(position) {\r\n//             if (position >= 0) {\r\n//                 this.$refs.bodyDrop.scrollTo(0, position); //cuộn đến tọa độ (0,position)\r\n//             }\r\n//         },\r\n//         /**\r\n//          * khi keydown mở combobox\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          */\r\n//         keyDown() {\r\n//             try {\r\n//                 if (!this.isShowCbb) {\r\n//                     this.isShowCbb = true;\r\n//                 } else {\r\n//                     this.i++;\r\n//                     if (this.i > this.dataItems.length - 1) {\r\n//                         this.i = this.dataItems.length - 1;\r\n//                     }\r\n//                     this.currentItem = this.dataItems[this.i];\r\n//                     this.scrollItem((this.i - 1) * this.hOfItem);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.log(error);\r\n//             }\r\n//         },\r\n//         /**\r\n//          * key down thì gán item hiện tại bằng item ở mảng ở vị trí i\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          */\r\n//         keyUp() {\r\n//             try {\r\n//                 if (this.i > 0) {\r\n//                     this.i--;\r\n//                     this.currentItem = this.dataItems[this.i];\r\n//                     this.scrollItem((this.i - 1) * this.hOfItem);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.log(error);\r\n//             }\r\n//         },\r\n\r\n//         /**\r\n//          * hàm xử lý sự kiện focus\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          *\r\n//          */\r\n//         onFocus() {\r\n//             // khi focus thì select\r\n//             // this.$refs.refName.select();\r\n//             this.$emit(\"keyword\", this.keyword);\r\n//         },\r\n//     },\r\n//     created() {\r\n\r\n//         // this.placeholder = this.label;\r\n//         this.$emit(\"onFocusCbb\");\r\n//         this.keyword = this.value;\r\n//         for (const item of this.items) {\r\n//             if (item[this.fieldName] == this.initValue) {\r\n//                 this.currentItem = item;\r\n//             }\r\n//         }\r\n//     },\r\n//     watch: {\r\n//         Filter: function (value) {\r\n//             this.filter = value;\r\n//             console.log(value);\r\n//         },\r\n//         items: function (value) {\r\n//             // nhận mảng item để hiển thị\r\n//             this.dataItems = value;\r\n//         },\r\n//         value: function (vl) {\r\n//             this.keyword = vl;\r\n//         },\r\n//         /**\r\n//          * theo dõi biến key word\r\n//          *  AUTHOR:HTTHOA(25/03/2023)\r\n//          */\r\n//         keyword() {\r\n//             if (this.keyword != this.currentItem[this.fieldCode]) {\r\n//                 if (this.keyword == \"\") {\r\n//                     this.currentItem = \"\";\r\n//                     this.$emit(\"selectedItem\", this.currentItem);\r\n//                 }\r\n//             } else if (this.keyword) {\r\n//                 // this.isShowCbb=!this.isShowCbb\r\n//                 this.dataItems.forEach((item) => {\r\n//                     let valueSearch = item[this.fieldCode].trim().toLowerCase();\r\n//                     if (valueSearch.includes(this.keyword.trim().toLowerCase())) {\r\n//                         return item;\r\n//                     }\r\n//                 });\r\n//             } else {\r\n//                 this.dataItems = this.items;\r\n//             }\r\n//         },\r\n//     },\r\n//     mounted() {\r\n\r\n//         var i = this.$refs.refName\r\n//         console.log(i);\r\n//         this.emitter.on(\"focus\", () => {\r\n//             this.$el.querySelector(\".input\").focus()\r\n//             // this.$el.querySelector(\".input\").focus();\r\n//         });\r\n//         // xét giá trị ban đầu cho combobox\r\n//         this.currentItem[this.fieldCode] = this.code;\r\n\r\n//         // this.item.filter((item,index)=>{\r\n//         //   if(item[this.fieldCode]===this.currentItem[this.fieldCode]){\r\n//         //     this.i=index\r\n//         //   }\r\n//         // })\r\n//     },\r\n// };\r\n</script>\r\n\r\n<style scoped>\r\n@import url(../../../css/combobox.css);\r\n\r\n.icon-tick {\r\n    margin-top: 12px;\r\n}\r\n\r\n.drop-down-name {\r\n    padding-left: 6px;\r\n}\r\n\r\n/* .tick {\r\n  padding-top: 4px;\r\n  margin-top: 4px;\r\n  margin-left: 5px;\r\n} */\r\n.drop-down-item {\r\n    display: flex;\r\n}\r\n\r\n.border-red {\r\n    border-color: #e03232 !important;\r\n}\r\n\r\n.m-combobox-2 .drop-down .drop-down-body {\r\n    max-height: 110px;\r\n\r\n    height: fit-content;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.m-combobox-2 .input {\r\n    padding: 0 20px 0 32px;\r\n    width: 230px;\r\n    margin-top: 0px;\r\n    height: 36px;\r\n    box-sizing: border-box;\r\n    border-radius: 2.5px;\r\n}\r\n\r\n.m-combobox .icon {\r\n    position: absolute;\r\n    left: 6px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n}\r\n\r\n.m-combobox .up-down {\r\n    position: absolute;\r\n    right: 19px;\r\n    /* top: 50%; */\r\n    transform: translateY(-50%);\r\n    justify-content: center;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;AA8BA,eAAe;EACXA,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAEC;IACV,CAAC;IACDC,KAAK,EAAE;MACHF,IAAI,EAAEG;IACV,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAEC;IACV,CAAC;IACDI,SAAS,EAAE;MACPL,IAAI,EAAEC;IACV,CAAC;IACDK,IAAI,EAAE;MACFN,IAAI,EAAEC;IACV,CAAC;IACDM,GAAG,EAAE;MACDP,IAAI,EAAEC;IACV,CAAC;IACDO,MAAM,EAAE;MACJR,IAAI,EAAEC;IACV,CAAC;IACDQ,OAAO,EAAE;MACLT,IAAI,EAAEC;IACV,CAAC;IACDS,KAAK,EAAE;MACHV,IAAI,EAAEC;IACV,CAAC;IACDU,MAAM,EAAE;MACJX,IAAI,EAAEY;IACV;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,CAAC,CAAC;MAAE;MACjBC,SAAS,EAAE,KAAK;MAAE;MAClBC,WAAW,EAAE,eAAe;MAAE;MAC9BC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,CAAC,EAAE,CAAC,CAAC;MACLC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE;IACZ,CAAC;EACL;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}